<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tudou.upms.dao.mapper.UpmsMarkdownMapper">
  <resultMap id="BaseResultMap" type="com.tudou.upms.dao.model.UpmsMarkdown">
    <id column="m_id" jdbcType="INTEGER" property="mId" />
    <result column="keywords" jdbcType="VARCHAR" property="keywords" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="update_time" jdbcType="INTEGER" property="updateTime" />
    <result column="statue" jdbcType="INTEGER" property="statue" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.tudou.upms.dao.model.UpmsMarkdown">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    m_id, keywords, title, create_time, update_time, statue, user_id, version
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.tudou.upms.dao.model.UpmsMarkdownExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from upms_markdown
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.tudou.upms.dao.model.UpmsMarkdownExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from upms_markdown
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from upms_markdown
    where m_id = #{mId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from upms_markdown
    where m_id = #{mId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tudou.upms.dao.model.UpmsMarkdownExample">
    delete from upms_markdown
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tudou.upms.dao.model.UpmsMarkdown">
    insert into upms_markdown (m_id, keywords, title, 
      create_time, update_time, statue, 
      user_id, version, content
      )
    values (#{mId,jdbcType=INTEGER}, #{keywords,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=INTEGER}, #{updateTime,jdbcType=INTEGER}, #{statue,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tudou.upms.dao.model.UpmsMarkdown">
    insert into upms_markdown
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mId != null">
        m_id,
      </if>
      <if test="keywords != null">
        keywords,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="statue != null">
        statue,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mId != null">
        #{mId,jdbcType=INTEGER},
      </if>
      <if test="keywords != null">
        #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="statue != null">
        #{statue,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tudou.upms.dao.model.UpmsMarkdownExample" resultType="java.lang.Long">
    select count(*) from upms_markdown
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update upms_markdown
    <set>
      <if test="record.mId != null">
        m_id = #{record.mId,jdbcType=INTEGER},
      </if>
      <if test="record.keywords != null">
        keywords = #{record.keywords,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
      <if test="record.statue != null">
        statue = #{record.statue,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update upms_markdown
    set m_id = #{record.mId,jdbcType=INTEGER},
      keywords = #{record.keywords,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      statue = #{record.statue,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update upms_markdown
    set m_id = #{record.mId,jdbcType=INTEGER},
      keywords = #{record.keywords,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      statue = #{record.statue,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tudou.upms.dao.model.UpmsMarkdown">
    update upms_markdown
    <set>
      <if test="keywords != null">
        keywords = #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="statue != null">
        statue = #{statue,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where m_id = #{mId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.tudou.upms.dao.model.UpmsMarkdown">
    update upms_markdown
    set keywords = #{keywords,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      statue = #{statue,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where m_id = #{mId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tudou.upms.dao.model.UpmsMarkdown">
    update upms_markdown
    set keywords = #{keywords,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      statue = #{statue,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER}
    where m_id = #{mId,jdbcType=INTEGER}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>